<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Foxtaur2D.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Foxtaur2D.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="Foxtaur 2D"
        xmlns:controls="clr-namespace:Foxtaur2D.Controls">

    <Window.Styles>
        <StyleInclude Source="/Styles/Common.axaml" />
    </Window.Styles>
    
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <!-- Main grid -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" MinWidth="300" />
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- Map renderer -->
        <Border
            Grid.Column="0"
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Classes="VisibleBorders">
            
            <controls:MapControl
                Name="MapRenderer" />
            
        </Border>
        
        <!-- Time scroll -->
        <Border
            Grid.Column="0"
            Grid.Row="1"
            Classes="VisibleBorders">
            
            <StackPanel>
                <Slider
                    Minimum="0"
                    Maximum="{ Binding TimelineEndValueRaw }"
                    Ticks="1"
                    IsEnabled="{ Binding IsTimelineEnabled }"
                    Value="{ Binding TimelineValueRaw }">
                </Slider>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
        
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <!-- Begin time -->
                    <Label
                        Grid.Column="0"
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        Content="{ Binding TimelineBeginTimeText}" />
                    
                    <!-- Current time -->
                    <Label
                        Grid.Column="1"
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        Content="{ Binding TimelineCurrentTimeText }" />
                    
                    <!-- End time -->
                    <Label
                        Grid.Column="2"
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        Content="{ Binding TimelineEndTimeText }" />
                </Grid>
            </StackPanel>
        </Border>
        
        <!-- Splitter between left and right parts of window -->
        <GridSplitter
            Grid.Column="1"
            Grid.Row="0"
            Grid.RowSpan="2"
            ResizeDirection="Columns" />
        
        <!-- Side controls -->
        <Border
            Classes="VisibleBorders"
            Grid.Column="2"
            Grid.Row="0"
            Grid.RowSpan="2">
            
            <!-- Put side controls here -->
            <StackPanel
                Classes="PaddingAndMargin">
                
                <!-- Distances -->
                <Border
                    Classes="VisibleBorders">
                    <StackPanel
                        Classes="PaddingAndMargin">
                        <Label>Distance:</Label>
                       
                        <Grid
                            ColumnDefinitions="*, Auto"
                            RowDefinitions="Auto">
                        
                            <ComboBox
                                Grid.Column="0"
                                Grid.Row="0"
                                x:Name="Distances"
                                HorizontalAlignment="Stretch"
                                SelectedIndex="{ Binding SelectedDistanceIndex }"
                                Items="{ Binding Distances }">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Label Content="{ Binding Name }" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        
                            <Button
                                Grid.Column="1"
                                Grid.Row="0"
                                Content="Reload"
                                Command="{ Binding ReloadDistancesCommand }"/>
                            
                        </Grid>
                        
                        <Button
                            Content="Focus"
                            Command="{ Binding FocusOnDistanceCommand }"/>
                        
                    </StackPanel>
                </Border>
                    
                <!-- Distance focus button -->
                <Border
                    Classes="VisibleBorders">
                    
                    <StackPanel
                        Classes="PaddingAndMargin">

                        <!-- Displayed hunters -->
                        <Label>Display:</Label>
                        
                        <!-- Single hunter mode -->
                        <RadioButton
                            x:Name="HunterDisplayModeSingleHunter"
                            GroupName="HuntersDisplayMode"
                            IsChecked="{ Binding IsSingleHunterModeChecked }"
                            Content="Hunter"/>
                        
                        <ComboBox
                            x:Name="Hunter"
                            HorizontalAlignment="Stretch"
                            SelectedIndex="{ Binding SelectedHunterIndex }"
                            Items="{ Binding Hunters }">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{ Binding Name }" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        
                        <RadioButton
                            x:Name="HunterDisplayModeTeam"
                            GroupName="HuntersDisplayMode"
                            IsChecked="{ Binding IsSingleTeamModeChecked }"
                            Content="Team"/>
                        
                        <ComboBox
                            x:Name="Team"
                            HorizontalAlignment="Stretch"
                            SelectedIndex="{ Binding SelectedTeamIndex }"
                            Items="{ Binding Teams }">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{ Binding Name }" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        
                        <RadioButton
                            x:Name="HunterDisplayModeEveryone"
                            GroupName="HuntersDisplayMode"
                            IsChecked="{ Binding IsEveryoneModeChecked }"
                            Content="Everyone"/>
                        
                    </StackPanel>
                </Border>
                
                <!-- Hunters data -->
                <Border
                    Classes="VisibleBorders">
                    
                    <StackPanel
                        Classes="PaddingAndMargin">
                        
                        <Label>Data connection:</Label>
                        
                        <!-- Hunters data reload interval -->
                        <StackPanel
                            Orientation="Horizontal">
                            
                            <Label>Hunters data reload interval:</Label>
                        
                            <Label
                                VerticalAlignment="Center"
                                Content="{ Binding HuntersDataReloadIntervalText }">
                            </Label>    
                        </StackPanel>
                        
                        <Slider
                            Minimum="1000"
                            Maximum="30000"
                            Ticks="100"
                            Value="{ Binding HuntersDataReloadInterval }"
                            VerticalAlignment="Center">
                        </Slider>
                        
                        <!-- Hunters data update indicator -->
                        <Label
                            BorderBrush="Black"
                            BorderThickness="1"
                            Background="{ Binding HuntersDataBackground }"
                            HorizontalContentAlignment="Center">
                            Hunters data
                        </Label>
                        
                    </StackPanel>
                    
                </Border>
            </StackPanel>
            
        </Border>
    </Grid>

</Window>
